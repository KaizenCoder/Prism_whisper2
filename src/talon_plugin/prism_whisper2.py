"""
Prism_whisper2 - Talon Python Module
Actions pour integration Talon ‚Üî Python Bridge
"""

import os
import subprocess
from talon import Module, actions

# Module Talon pour nos actions personnalis√©es
mod = Module()

@mod.action_class
class Actions:
    def prism_transcribe():
        """D√©clencher une transcription Prism_whisper2"""
        # Cr√©er signal file pour bridge
        trigger_file = r"C:\Dev\Superwhisper2\talon_trigger.txt"
        try:
            with open(trigger_file, 'w') as f:
                f.write("transcribe\n")
            print(f"‚úÖ Signal cr√©√©: {trigger_file}")
        except Exception as e:
            print(f"‚ùå Erreur signal: {e}")
    
    def prism_signal_start():
        """Signaler d√©but de transcription"""
        actions.user.prism_create_signal_file()
    
    def prism_create_signal_file():
        """Cr√©er fichier signal pour bridge Python"""
        actions.user.prism_transcribe()
    
    def system_command(command: str):
        """Ex√©cuter commande syst√®me"""
        try:
            subprocess.run(command, shell=True, check=True)
            print(f"‚úÖ Commande ex√©cut√©e: {command}")
        except subprocess.CalledProcessError as e:
            print(f"‚ùå Erreur commande: {e}")

print("üéôÔ∏è Prism_whisper2 Talon module loaded !") 